# Print Screenshots

bind=,Print,exec, ~/.config/rofi/scripts/screenshot
bind=CONTROL,Print,exec, ~/.config/rofi/scripts/copy_screenshot

# bind=,Print,exec,grimblast --notify save output $(xdg-user-dir PICTURES)/Screenshots/$(date +'%Y%m%d%H%M%S.png')
# bind=CONTROL,Print,exec,grimblast --notify copy output
# bind=CONTROLSHIFT,Print,exec,grimblast --notify copy area
# bind=SHIFT,Print,exec,grimblast --notify save area $(xdg-user-dir PICTURES)/Screenshots/$(date +'%Y%m%d%H%M%S.png')
# bind=SUPERSHIFT,Print,exec,grimblast save output - | swappy -f -

# bind=SUPERSHIFT,S,exec,grimblast --notify save area $(xdg-user-dir PICTURES)/Screenshots/$(date +'%Y%m%d%H%M%S.png')
# bind=SUPERCONTROL,S,exec,grimblast --notify copy area
# bind=SUPERALT,S,exec,grimblast --notify copy active

# Launchers
bind = SUPER, RETURN, exec, konsole #alacritty
bind = SUPER, B, exec, firefox
bind = SUPER, E, exec, dolphin
bind = SUPER, D, exec, ~/.config/rofi/scripts/launcher
bind = SUPERSHIFT, E, exec, ~/.config/rofi/scripts/powermenu
bind = SUPER, L, exec, swaylock

# Bindings
bind = CTRL ALT, Delete, exit
bind = SUPER, Q, killactive
bind = SUPER, F, togglefloating
bind = SUPER, H, fakefullscreen
bind = SUPER, G, fullscreen
bind = SUPER, J, togglesplit

# Move focus with mainMod + arrow keys
bind = SUPER, up, movefocus, u
bind = SUPER, down, movefocus, d
bind = SUPER, right, movefocus, r
bind = SUPER, left, movefocus, l

# Switch workspaces with mainMod + [0-9]
bind = SUPERCTRL, left,   workspace, e-1
bind = SUPERCTRL, right, workspace, e+1
bind = SUPER, 1, workspace, 1
bind = SUPER, 2, workspace, 2
bind = SUPER, 3, workspace, 3
bind = SUPER, 4, workspace, 4
bind = SUPER, 5, workspace, 5
bind = SUPER, 6, workspace, 6
bind = SUPER, 7, workspace, 7
bind = SUPER, 8, workspace, 8
bind = SUPER, 9, workspace, 9
bindr=SUPER,Tab,workspace,previous

# Window
binde = SUPER CTRL, k, resizeactive, 0 -20
binde = SUPER CTRL, j, resizeactive, 0 20
binde = SUPER CTRL, l, resizeactive, 20 0
binde = SUPER CTRL, h, resizeactive, -20 0
binde = SUPER ALT,  k, moveactive, 0 -20
binde = SUPER ALT,  j, moveactive, 0 20
binde = SUPER ALT,  l, moveactive, 20 0
binde = SUPER ALT,  h, moveactive, -20 0
bindr=SUPERALT,left,resizeactive,-20 0
bindr=SUPERALT,right,resizeactive,20 0
bindr=SUPERALT,up,resizeactive,0 -20
bindr=SUPERALT,down,resizeactive,0 20

# Move active window to workspace
bind = SUPER SHIFT, right, movetoworkspace, e+1
bind = SUPER SHIFT, left,  movetoworkspace, e-1
bind = SUPER SHIFT, 1, movetoworkspace, 1
bind = SUPER SHIFT, 2, movetoworkspace, 2
bind = SUPER SHIFT, 3, movetoworkspace, 3
bind = SUPER SHIFT, 4, movetoworkspace, 4
bind = SUPER SHIFT, 5, movetoworkspace, 5
bind = SUPER SHIFT, 6, movetoworkspace, 6
bind = SUPER SHIFT, 7, movetoworkspace, 7
bind = SUPER SHIFT, 8, movetoworkspace, 8
bind = SUPER SHIFT, 9, movetoworkspace, 9

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = SUPER, mouse:272, movewindow
bindm = SUPER, mouse:273, resizewindow

# Submaps
# will switch to a submap called resize
bind=ALT,R,submap,resize

# will start a submap called "resize"
submap=resize

# sets repeatable binds for resizing the active window
binde=,right,resizeactive,10 0
binde=,left,resizeactive,-10 0
binde=,up,resizeactive,0 -10
binde=,down,resizeactive,0 10

# use reset to go back to the global submap
bind=,escape,submap,reset

# will reset the submap, meaning end the current one and return to the global one
submap=reset

# keybinds further down will be global again...

# Laptop
bindle = , XF86MonBrightnessUp,     exec, light -A 10 && notify-send " Light" "Brightness: $(light)%" --hint="int:value:$(light)"
bindle = , XF86MonBrightnessDown,   exec, light -U 10 && notify-send " Light" "Brightness: $(light)%" --hint="int:value:$(light)"
bindl  = , XF86AudioMicMute,         exec, pamixer --default-source -t
bindle = , XF86AudioMute, exec,     ~/.config/hypr/scripts/volume mute
bindle = , XF86AudioRaiseVolume,    exec, ~/.config/hypr/scripts/volume up
bindle = , XF86AudioLowerVolume,    exec, ~/.config/hypr/scripts/volume down
bindl  = , XF86AudioStop,           exec, playerctl stop
bindl  = , XF86AudioPause,          exec, playerctl pause
bindl  = , XF86AudioPrev,           exec, playerctl previous
bindl  = , XF86AudioNext,           exec, playerctl next
